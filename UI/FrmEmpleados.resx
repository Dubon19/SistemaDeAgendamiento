<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/9k=
</value>
  </data>
</root>